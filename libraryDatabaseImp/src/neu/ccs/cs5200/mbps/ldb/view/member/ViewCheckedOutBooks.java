/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package neu.ccs.cs5200.mbps.ldb.view.member;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import neu.ccs.cs5200.mbps.ldb.jdbc.LDBConnector;
import neu.ccs.cs5200.mbps.ldb.model.Book;
import neu.ccs.cs5200.mbps.ldb.model.Member;
import neu.ccs.cs5200.mbps.ldb.model.Rental;
import neu.ccs.cs5200.mbps.ldb.nav.Navigator;
import neu.ccs.cs5200.mbps.ldb.view.util.Registry;
import neu.ccs.cs5200.mbps.ldb.view.util.ViewConstants;

/**
 * View the current Member's checked out books and their due dates.
 * 
 * @author Matt
 */
public class ViewCheckedOutBooks extends javax.swing.JPanel {

    /**
     * Creates new form ViewCheckedOutBooks
     */
    public ViewCheckedOutBooks() {
        initComponents();
        this.rentalTable.setAutoCreateRowSorter(true);
        registerViewCheckedOutBooksPanel();
    }
    
    private void registerViewCheckedOutBooksPanel() {
        (Navigator.getInstance()).register(ViewConstants.Member.VIEW_CHECKED_OUT_BOOKS, this);
    }
    
    /**
     * Find all books checked out by the current Member
     */
    public void loadCheckedOutBooks() {
        DefaultTableModel m = (DefaultTableModel) rentalTable.getModel();
        
        // wipe out the old table
        while (m.getRowCount() > 0) {
            m.removeRow(0);
        }
        
        // get the current member's checked out books
        Member member = (Member) (Registry.getInstance()).get(ViewConstants.SESSION_MEMBER);
        List<Rental> checkedOutBooks = (LDBConnector.getInstance()).viewCurrentCheckedOutBooks(member);
        
        // fill the table with the checked out books
        for (Rental r : checkedOutBooks)
        {
            Book b = r.getBook();
            m.addRow(new Object[] { r.getFormattedDueDate(),
                                    b.getId(),
                                    b.getIsbn(),
                                    b.getTitle(),
                                    b.getAuthor(),
                                    b.getPublisher(),
                                    b.getGenre()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rentalTable = new javax.swing.JTable();

        jLabel1.setText("View Checked Out Books");

        rentalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Due Date", "ID", "ISBN", "Title", "Author", "Publisher", "Genre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rentalTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(rentalTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jLabel1)
                .addContainerGap(143, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable rentalTable;
    // End of variables declaration//GEN-END:variables
}
